{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nconst PREFIX = 'whatsapp-clone-'; // const useLocalStorage = (key:string | any,initialValue?:Function | string | undefined | any)  :[string | any, (value: string | undefined| any) => void | any] => {\n\nconst useLocalStorage = (key, initialValue) => {\n  _s();\n\n  const prefixedKey = PREFIX + key;\n  const [value, setValue] = useState(() => {\n    const jsonValue = localStorage.getItem(prefixedKey);\n    if (jsonValue != null) return JSON.parse(jsonValue);\n\n    if (typeof initialValue === 'function') {\n      return initialValue();\n    } else {\n      return initialValue;\n    }\n  });\n  useEffect(() => {\n    localStorage.setItem(prefixedKey, JSON.stringify(value));\n  }, [prefixedKey, value]);\n  return [value, setValue];\n};\n\n_s(useLocalStorage, \"4XDEGhMGut4PzPY4DAxUNNCnG4Y=\");\n\nexport default useLocalStorage;","map":{"version":3,"sources":["D:/2021/chat/client/src/compoments/hooks/useLocalStorage.ts"],"names":["useEffect","useState","PREFIX","useLocalStorage","key","initialValue","prefixedKey","value","setValue","jsonValue","localStorage","getItem","JSON","parse","setItem","stringify"],"mappings":";;AAAA,SAAQA,SAAR,EAAkBC,QAAlB,QAAiC,OAAjC;AAEA,MAAMC,MAAM,GAAG,iBAAf,C,CAEA;;AACI,MAAMC,eAAe,GAAG,CAACC,GAAD,EAAUC,YAAV,KAAqE;AAAA;;AAC7F,QAAMC,WAAW,GAAGJ,MAAM,GAAGE,GAA7B;AACA,QAAM,CAACG,KAAD,EAAOC,QAAP,IAAmBP,QAAQ,CAAM,MAAM;AACzC,UAAMQ,SAAS,GAAGC,YAAY,CAACC,OAAb,CAAqBL,WAArB,CAAlB;AACA,QAAGG,SAAS,IAAI,IAAhB,EAAsB,OAAOG,IAAI,CAACC,KAAL,CAAWJ,SAAX,CAAP;;AACtB,QAAG,OAAOJ,YAAP,KAAwB,UAA3B,EAAsC;AAClC,aAAOA,YAAY,EAAnB;AACH,KAFD,MAEK;AACD,aAAOA,YAAP;AACH;AACJ,GARgC,CAAjC;AAUAL,EAAAA,SAAS,CAAC,MAAM;AACZU,IAAAA,YAAY,CAACI,OAAb,CAAqBR,WAArB,EAAiCM,IAAI,CAACG,SAAL,CAAeR,KAAf,CAAjC;AACH,GAFQ,EAEP,CAACD,WAAD,EAAaC,KAAb,CAFO,CAAT;AAIA,SAAO,CAACA,KAAD,EAAOC,QAAP,CAAP;AACH,CAjBG;;GAAML,e;;AAkBV,eAAeA,eAAf","sourcesContent":["import {useEffect,useState} from 'react';\r\n\r\nconst PREFIX = 'whatsapp-clone-'\r\n\r\n// const useLocalStorage = (key:string | any,initialValue?:Function | string | undefined | any)  :[string | any, (value: string | undefined| any) => void | any] => {\r\n    const useLocalStorage = (key: any,initialValue?: any)  :[any, (value: any) => void | any ]=> {\r\n    const prefixedKey = PREFIX + key\r\n    const [value,setValue] = useState<any>(() => {\r\n        const jsonValue = localStorage.getItem(prefixedKey)\r\n        if(jsonValue != null) return JSON.parse(jsonValue)\r\n        if(typeof initialValue === 'function'){\r\n            return initialValue();\r\n        }else{\r\n            return initialValue\r\n        }\r\n    })\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem(prefixedKey,JSON.stringify(value))\r\n    },[prefixedKey,value])\r\n\r\n    return [value,setValue]\r\n}\r\nexport default useLocalStorage"]},"metadata":{},"sourceType":"module"}