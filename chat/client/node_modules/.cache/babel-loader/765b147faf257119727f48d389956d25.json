{"ast":null,"code":"var _jsxFileName = \"/run/media/lin/Data/2022study/newchat/oldclient/src/compoments/Conversations/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { ListGroup } from 'react-bootstrap';\nimport { useConversations } from '../../contexts/ConversationsProvider';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Conversations = () => {\n  _s();\n\n  const {\n    conversations,\n    selectConversation\n  } = useConversations();\n  return /*#__PURE__*/_jsxDEV(ListGroup, {\n    variant: \"flush\",\n    children: conversations === null || conversations === void 0 ? void 0 : conversations.map((conversation, index) => {\n      var _conversation$recipie;\n\n      return /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n        action: true,\n        onClick: () => selectConversation(index),\n        active: conversation.selected,\n        children: (_conversation$recipie = conversation.recipients) === null || _conversation$recipie === void 0 ? void 0 : _conversation$recipie.map(r => r.name).join(', ')\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Conversations, \"dcCoOq5kCDz/79lJhrquk0y8GsE=\", false, function () {\n  return [useConversations];\n});\n\n_c = Conversations;\nexport default Conversations;\n\nvar _c;\n\n$RefreshReg$(_c, \"Conversations\");","map":{"version":3,"sources":["/run/media/lin/Data/2022study/newchat/oldclient/src/compoments/Conversations/index.tsx"],"names":["React","ListGroup","useConversations","Conversations","conversations","selectConversation","map","conversation","index","selected","recipients","r","name","join"],"mappings":";;;AAAA,OAAOA,KAAP,MAAwC,OAAxC;AACA,SAASC,SAAT,QAA0B,iBAA1B;AACA,SAASC,gBAAT,QAAiC,sCAAjC;;;AAEA,MAAMC,aAAiB,GAAG,MAEP;AAAA;;AAEjB,QAAM;AAAEC,IAAAA,aAAF;AAAkBC,IAAAA;AAAlB,MAAwCH,gBAAgB,EAA9D;AAEA,sBACE,QAAC,SAAD;AAAW,IAAA,OAAO,EAAC,OAAnB;AAAA,cAEIE,aAFJ,aAEIA,aAFJ,uBAEIA,aAAa,CAAEE,GAAf,CAAmB,CAACC,YAAD,EAAwDC,KAAxD;AAAA;;AAAA,0BACjB,QAAC,SAAD,CAAW,IAAX;AAEE,QAAA,MAAM,MAFR;AAGE,QAAA,OAAO,EAAI,MAAMH,kBAAkB,CAACG,KAAD,CAHrC;AAIE,QAAA,MAAM,EAAID,YAAY,CAACE,QAJzB;AAAA,2CAMGF,YAAY,CAACG,UANhB,0DAMG,sBAAyBJ,GAAzB,CAA6BK,CAAC,IAAIA,CAAC,CAACC,IAApC,EAA0CC,IAA1C,CAA+C,IAA/C;AANH,SACOL,KADP;AAAA;AAAA;AAAA;AAAA,cADiB;AAAA,KAAnB;AAFJ;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD,CAtBD;;GAAML,a;UAI0CD,gB;;;KAJ1CC,a;AAuBN,eAAeA,aAAf","sourcesContent":["import React, { FC, ReactElement } from 'react';\r\nimport { ListGroup } from 'react-bootstrap';\r\nimport { useConversations } from '../../contexts/ConversationsProvider';\r\n\r\nconst Conversations: FC = (\r\n\r\n): ReactElement => {\r\n\r\n  const { conversations , selectConversation} = useConversations()\r\n\r\n  return (\r\n    <ListGroup variant='flush'>\r\n      {\r\n        conversations?.map((conversation: { recipients: any[],selected: boolean }, index: number) => (\r\n          <ListGroup.Item\r\n            key={index}\r\n            action\r\n            onClick = {() => selectConversation(index)}\r\n            active = {conversation.selected}\r\n          >\r\n            {conversation.recipients?.map(r => r.name).join(', ')}\r\n          </ListGroup.Item>\r\n        ))\r\n      }\r\n    </ListGroup>\r\n  );\r\n}\r\nexport default Conversations"]},"metadata":{},"sourceType":"module"}